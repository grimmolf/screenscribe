[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "screenscribe"
version = "1.0.0"
description = "CLI tool that processes videos and screen recordings to produce structured Markdown or HTML notes"
authors = [{name = "screenscribe", email = "dev@screenscribe.ai"}]
readme = "README.md"
requires-python = ">=3.9"
keywords = ["video", "transcription", "ai", "whisper", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "typer>=0.9.0",
    "faster-whisper>=1.0.0",
    "opencv-python>=4.8.0",
    "yt-dlp>=2024.1.0",
    "litellm>=1.0.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "pillow>=10.0.0",
    "numpy>=1.24.0",
    "ffmpeg-python>=0.2.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
# Platform-specific audio backends
apple = [
    "mlx-whisper>=0.2.0",  # Apple Silicon GPU acceleration
]

# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "black>=23.0.0",
    "pytest-cov>=4.1.0",
]

# Install all optional backends
all = [
    "screenscribe[apple]",
]

[project.scripts]
screenscribe = "screenscribe.cli:main"

[project.urls]
Homepage = "https://github.com/screenscribe/screenscribe"
Repository = "https://github.com/screenscribe/screenscribe.git"
Documentation = "https://github.com/screenscribe/screenscribe#readme"
"Bug Tracker" = "https://github.com/screenscribe/screenscribe/issues"

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "ERA", "PGH", "PL", "TRY", "FLY", "NPY", "RUF"]
ignore = ["S101", "T201", "PLR0913", "PLR0912", "PLR0915"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
target-version = ["py39"]
line-length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"